name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y curl
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start Flask application
        run: |
          python3 app.py &
          sleep 10

      - name: Test API POST
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"subject": "test 1","data": "this is a test"}' http://127.0.0.1:5000/tasks

      - name: Test API GET
        run: |
          curl -X GET http://127.0.0.1:5000/tasks

      - name: Stop Flask application
        if: always()
        run: |
          kill $(lsof -t -i:5000)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Determine Docker Image Tag Version
        id: get_version
        run: |
          # Get the latest tag
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "1.0")
          
          # Extract major and minor versions
          MAJOR=$(echo $TAG | cut -d. -f1)
          MINOR=$(echo $TAG | cut -d. -f2)
          
          # Increment the minor version
          if [ -z "$MINOR" ]; then
            MINOR=0
          fi
          NEW_MINOR=$((MINOR + 1))

          # Create new tag
          NEW_TAG="$MAJOR.$NEW_MINOR"
          echo "New Docker tag: $NEW_TAG"
          echo "::set-output name=version::$NEW_TAG"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/flaskapi_test:${{ steps.get_version.outputs.version }}
